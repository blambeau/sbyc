$LOAD_PATH.unshift(File.dirname(__FILE__), '..', '..', 'lib')
require 'sbyc/engine'

assert Fixnum.include_value?(12)
assert !Fixnum.include_value?("aaa")
assert Float.include_value?(12.0)
assert !Float.include_value?(12)
assert String.include_value?("aaa")
assert !String.include_value?(true)

t = ::SByC::Boolean::TRUE
f = ::SByC::Boolean::FALSE
assert_nothing_raised {
  x = ::SByC::Boolean[true]
  y = ::SByC::Boolean[false]
}
assert_raise(::SByC::TypeError) {
  ::SByC::Boolean["blabla"]  
}

assert_nothing_raised {
  x = ::SByC::Integer[12]
  assert(::SByC::Integer === x)
  assert(!(::Integer === x))
  assert_equal ::SByC::Integer[12], x
}
assert_raise(::SByC::TypeError) {
  ::SByC::Integer["blabla"]  
}
assert_raise(::SByC::TypeError) {
  ::SByC::Integer[nil]  
}
assert_nothing_raised {
  x = ::SByC::Integer[12]
  y = ::SByC::Integer[3]
  z = x + y
  assert_equal(::SByC::Integer[15], z)
  z = x - y
  assert_equal(::SByC::Integer[9], z)
}
assert_equal(t, ::SByC::Integer[12] > ::SByC::Integer[3])
assert_equal(t, ::SByC::Integer[3] < ::SByC::Integer[12])
assert_equal(t, ::SByC::Integer[12] >= ::SByC::Integer[12])
assert_equal(f, ::SByC::Integer[-1] >= ::SByC::Integer[0])

assert_equal(Fixnum, ::SByC::Natural.get_ruby_type)
x = ::SByC::Natural[12]

assert_raise(::SByC::TypeError) {
  x = ::SByC::Natural[-1]
}

assert_raise(::SByC::TypeError) {
  x = ::SByC::Byte[-1]
}

x = ::SByC::Integer[12]
assert(::SByC::Integer === x)
assert(::SByC::Natural === x)
assert(::SByC::Byte === x)
assert(!(::SByC::Integer === "blabla"))

x = ::SByC::Integer[1000]
assert(::SByC::Integer === x)
assert(::SByC::Natural === x)
assert(!(::SByC::Byte === x))

posint = Fixnum.sbyc{|i| i > 0}
assert posint.include_value?(12)
assert !(posint === 0)
assert !(posint === -1)