$LOAD_PATH.unshift(File.dirname(__FILE__), '..', '..', 'lib')
require 'sbyc/engine'

t = ::SByC::Builtin::Boolean::TRUE
f = ::SByC::Builtin::Boolean::FALSE
assert_nothing_raised {
  x = ::SByC::Builtin::Boolean[true]
  y = ::SByC::Builtin::Boolean[true]
}
assert_raise(::SByC::TypeError) {
  ::SByC::Builtin::Boolean["blabla"]  
}

assert_nothing_raised {
  x = ::SByC::Builtin::Int[12]
  ::SByC::Builtin::Int === x
  assert_equal ::SByC::Builtin::Int[12], x
}
assert_raise(::SByC::TypeError) {
  ::SByC::Builtin::Int["blabla"]  
}
assert_raise(::SByC::TypeError) {
  ::SByC::Builtin::Int[nil]  
}
assert_nothing_raised {
  x = ::SByC::Builtin::Int[12]
  y = ::SByC::Builtin::Int[3]
  z = x + y
  assert_equal(::SByC::Builtin::Int[15], z)
  z = x - y
  assert_equal(::SByC::Builtin::Int[9], z)
}
assert_equal(t, ::SByC::Builtin::Int[12] > ::SByC::Builtin::Int[3])
assert_equal(t, ::SByC::Builtin::Int[3] < ::SByC::Builtin::Int[12])
assert_equal(t, ::SByC::Builtin::Int[12] >= ::SByC::Builtin::Int[12])
assert_equal(f, ::SByC::Builtin::Int[-1] >= ::SByC::Builtin::Int[0])

assert_equal(Fixnum, ::SByC::Builtin::PosInt.get_ruby_type)
x = ::SByC::Builtin::PosInt[12]

assert_raise(::SByC::TypeError) {
  x = ::SByC::Builtin::PosInt[-1]
}