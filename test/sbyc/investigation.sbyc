$LOAD_PATH.unshift(File.dirname(__FILE__), '..', '..', 'lib')
require 'sbyc/engine'

t = ::SByC::Builtin::Boolean::TRUE
f = ::SByC::Builtin::Boolean::FALSE
assert_nothing_raised {
  x = ::SByC::Builtin::Boolean[true]
  y = ::SByC::Builtin::Boolean[true]
}
assert_raise(::SByC::TypeError) {
  ::SByC::Builtin::Boolean["blabla"]  
}

assert_nothing_raised {
  x = ::SByC::Builtin::Integer[12]
  ::SByC::Builtin::Integer === x
  assert_equal ::SByC::Builtin::Integer[12], x
}
assert_raise(::SByC::TypeError) {
  ::SByC::Builtin::Integer["blabla"]  
}
assert_raise(::SByC::TypeError) {
  ::SByC::Builtin::Integer[nil]  
}
assert_nothing_raised {
  x = ::SByC::Builtin::Integer[12]
  y = ::SByC::Builtin::Integer[3]
  z = x + y
  assert_equal(::SByC::Builtin::Integer[15], z)
  z = x - y
  assert_equal(::SByC::Builtin::Integer[9], z)
}
assert_equal(t, ::SByC::Builtin::Integer[12] > ::SByC::Builtin::Integer[3])
assert_equal(t, ::SByC::Builtin::Integer[3] < ::SByC::Builtin::Integer[12])
assert_equal(t, ::SByC::Builtin::Integer[12] >= ::SByC::Builtin::Integer[12])
assert_equal(f, ::SByC::Builtin::Integer[-1] >= ::SByC::Builtin::Integer[0])

assert_equal(Fixnum, ::SByC::Builtin::Natural.get_ruby_type)
x = ::SByC::Builtin::Natural[12]

assert_raise(::SByC::TypeError) {
  x = ::SByC::Builtin::Natural[-1]
}